#!/bin/bash
# Create new MySQL database,
# download & install latest stable Conato to $DOCUMENTROOT/$PROJECT/contao
# and link "public" to "contao"

# Environment-configurable variables
MYSQLROOTUSER=root
MYSQLROOTPASS=rootPW
MYSQLDBUSER=user
MYSQLDBPASS=userPW
MYSQLHOST=localhost
DBPREFIX=contao_
DOCUMENTROOT=$HOME/www
LOCALHOST=localhost/%PROJECT% # %PROJECT% will be replaced with $PROJECT
CONTASH=`which contash`
LOCALCONFIG=${CONTASH/%contash}
LANG=de
defaultLANG=(de en)
MYSQL=`which mysql`

# Read userconfig if available
if [ -r ~/.contash ]; then
  source ~/.contash
fi

# Check for arguments
if [ $# -lt 1 ]
then
  echo "USAGE: contash project|domainname";
  echo "New MySQL database requires at least one argument (the name of the project to create a development database for = domain name)."
  echo "Aborting..."
  exit
fi

PROJECT="$1"
echo "Project: $PROJECT"
echo "Docroot: $DOCUMENTROOT"
DBNAME=$DBPREFIX${PROJECT//-/_}
echo -e "Database: $DBNAME\n---------"

Q1="CREATE DATABASE IF NOT EXISTS $DBNAME;"
Q2="GRANT ALL ON $DBNAME.* TO '$MYSQLDBUSER'@'$MYSQLHOST' IDENTIFIED BY '$MYSQLDBPASS';"
Q3="FLUSH PRIVILEGES;"
SQL="${Q1}${Q2}${Q3}"

# Execute database creation
$MYSQL -u$MYSQLROOTUSER -p$MYSQLROOTPASS -e "$SQL"

# Check whether database was created
RESULT=$($MYSQL -u$MYSQLDBUSER -p$MYSQLDBPASS -e "SHOW DATABASES LIKE '$DBNAME';")
if [ -n "$RESULT" ]
then
  echo "A database has been created with the name set to $DBNAME."
  echo "User set to $MYSQLDBUSER and password set to $MYSQLDBPASS."
else
  echo "Oops â€“ Something went wrong! The database could not be created or the new user has no access."
  echo "Aborting..."
  exit
fi

# Create project directory in $DOCUMENTROOT
echo -e "---------\nCreating $DOCUMENTROOT/$PROJECT\n---------"
mkdir "$DOCUMENTROOT/$PROJECT"

# Download and extract latest stable Contao
curl -Lo $DOCUMENTROOT/$PROJECT/contao.zip https://download.contao.org/zip
unzip -q $DOCUMENTROOT/$PROJECT/contao.zip -d $DOCUMENTROOT/$PROJECT
rm $DOCUMENTROOT/$PROJECT/contao.zip
INSTALLATION=$(ls $DOCUMENTROOT/$PROJECT | grep "contao")
echo -e "Unziped to: $INSTALLATION\n---------"

# Read current version from CHANGELOG.md
VERS=$(grep -om 1 "Version \([0-9].\)*" $DOCUMENTROOT/$PROJECT/$INSTALLATION/system/docs/CHANGELOG.md)
VERS=${VERS:8}
# Trim whitespace!
VERS=${VERS//[[:space:]]/}
SITEROOT=$DOCUMENTROOT/$PROJECT/cms/$VERS
echo "Version: $VERS"
echo -e "Siteroot: $SITEROOT\n---------"

# Move core-master to contao/[current version]
mkdir $DOCUMENTROOT/$PROJECT/cms
mv $DOCUMENTROOT/$PROJECT/$INSTALLATION $SITEROOT

# Copy localconfig.php to contao/[current version]/system/config/
cp $LOCALCONFIG/localconfig.php $SITEROOT/system/config/
# Fill in database name and latest version
sed -i "" "s/%%DBNAME%%/$DBNAME/" $SITEROOT/system/config/localconfig.php
sed -i "" "s/%%CURVERS%%/$VERS/" $SITEROOT/system/config/localconfig.php
sed -i "" "s/%%TITLE%%/$PROJECT/" $SITEROOT/system/config/localconfig.php

# Create folders named $PROJECT in /files and /templates
mkdir $SITEROOT/files/$PROJECT
touch $SITEROOT/files/$PROJECT/style.css
touch $SITEROOT/files/$PROJECT/main.js
mkdir $SITEROOT/files/$PROJECT/downloads
mkdir $SITEROOT/files/$PROJECT/images
mkdir $SITEROOT/files/$PROJECT/images/site
mkdir $SITEROOT/files/$PROJECT/images/theme
mkdir $SITEROOT/templates/$PROJECT

# Prepare contao_init.sql to mach project
NEWDB=$DOCUMENTROOT/$PROJECT/contao_$PROJECT.sql
cp $LOCALCONFIG/contao_init.sql $NEWDB
sed -i "" "s/init/$PROJECT/g" $NEWDB

# Populate database
$MYSQL -u$MYSQLROOTUSER -p$MYSQLROOTPASS $DBNAME < $NEWDB
rm $NEWDB

# Delete unused languages
read -p "Which language files do you want to keep [${defaultLANG[*]}|all]: " -a keepLANG
if [ "${keepLANG[*]}" == "" ]; then
  keepLANG=("${defaultLANG[@]}")
fi
if [ "${keepLANG[0]}" != "all" ]; then
  for i in "${keepLANG[@]}"; do
   echo "Keeping $i"
  done
  del=0
  keep=0
  for i in $(ls -d $SITEROOT/system/modules/*/languages/*); do
    langdir=${i: -2}
    if [[ " ${keepLANG[@]} " =~ " ${langdir} " ]]; then
      #echo "Found $langdir: Not deleting $i"
      keep=$(( $keep + 1 ))
    else
      #echo "Deleting $i"
      rm -R $i
      del=$(( $del + 1 ))
    fi
  done
  echo "Kept $keep language folders"
  echo "Deleted $del language folders"
else
  echo "Not deleting anything!"
fi

# Delete existing 'public' symlink if exists
if [ -a $DOCUMENTROOT/$PROJECT/public ]; then
  rm $DOCUMENTROOT/$PROJECT/public
fi
# Create 'public' symlink to contao/[current version]
ln -s $SITEROOT $DOCUMENTROOT/$PROJECT/public

# Check for previous installations to copy content from
if (( $(ls -1 $DOCUMENTROOT/$PROJECT/cms/ | wc -l) > 1 )); then
  LAST=$(ls -1 $DOCUMENTROOT/$PROJECT/cms/ | tail -2 | head -1)
  read -p "Copy content from previous installation (cms/$LAST)? [y|n]" COPYFILES
  if [ "$COPYFILES" = "y" ]; then
    cp -R $DOCUMENTROOT/$PROJECT/cms/$LAST/files/$PROJECT $SITEROOT/files/
    cp -R $DOCUMENTROOT/$PROJECT/cms/$LAST/templates/$PROJECT $SITEROOT/templates/
  fi
fi

# Open installtool in browser if server is running
RUNNING=$(ps ax | grep "httpd" | wc -l)
LOCALHOST=${LOCALHOST//%PROJECT%/$PROJECT}
if [ $RUNNING -gt 1 ]; then
  read -p "open http://$LOCALHOST/contao/install.php [y|n] " OPENSITE
  if [ "$OPENSITE" = "y" ]; then
    open "http://$LOCALHOST/contao/install.php"
  fi
fi
